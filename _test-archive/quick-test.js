/**
 * Îπ†Î•∏ Îã®Ïùº ÌååÏùº ÌÖåÏä§Ìä∏ - ÌååÏùº ÏóÖÎ°úÎìúÍ∞Ä Ï†úÎåÄÎ°ú ÏûëÎèôÌïòÎäîÏßÄ ÌôïÏù∏
 */

async function quickTest() {
  const { chromium } = await import('playwright');

  const browser = await chromium.launch({
    headless: false,
  });

  const page = await browser.newPage();

  console.log('üåê https://hqmx.net Ï†ëÏÜç Ï§ë...');
  await page.goto('https://hqmx.net', { waitUntil: 'domcontentloaded' });
  await page.waitForTimeout(3000);
  console.log('‚úÖ ÏÇ¨Ïù¥Ìä∏ Î°úÎìú ÏôÑÎ£å');

  console.log('\nüì§ JPG ÌååÏùº ÏóÖÎ°úÎìú ÏãúÎèÑ...');
  const filePath = './conv-test/sc_04.07.18.09.08.2025.jpg';

  // page.setInputFiles ÏÇ¨Ïö© (Ïù¥Î≤§Ìä∏ ÏûêÎèô Î∞úÏÉù)
  await page.setInputFiles('input[type="file"]', filePath);

  console.log('‚è≥ 3Ï¥à ÎåÄÍ∏∞...');
  await page.waitForTimeout(3000);

  // ÌååÏùº Î¶¨Ïä§Ìä∏ ÌôïÏù∏
  const fileItems = await page.locator('#fileList .file-item').count();
  console.log(`üìã ÌååÏùº Î¶¨Ïä§Ìä∏ Ìï≠Î™©: ${fileItems}Í∞ú`);

  // Ìè¨Îß∑ Î≤ÑÌäº ÌôïÏù∏
  const formatButtons = await page.locator('button.format-btn').all();
  console.log(`üîò Ìè¨Îß∑ Î≤ÑÌäº: ${formatButtons.length}Í∞ú`);

  if (formatButtons.length > 0) {
    for (let i = 0; i < Math.min(formatButtons.length, 10); i++) {
      const btn = formatButtons[i];
      const text = await btn.textContent();
      const visible = await btn.isVisible();
      console.log(`  [${i}] ${text.trim()} - ${visible ? 'Î≥¥ÏûÑ' : 'Ïà®ÍπÄ'}`);
    }
  }

  // Ïä§ÌÅ¨Î¶∞ÏÉ∑
  await page.screenshot({ path: 'quick-test-screenshot.png', fullPage: true });
  console.log('\nüì∏ Ïä§ÌÅ¨Î¶∞ÏÉ∑ Ï†ÄÏû•: quick-test-screenshot.png');

  console.log('\n‚è∏Ô∏è  10Ï¥àÍ∞Ñ Î∏åÎùºÏö∞Ï†Ä Ïó¥Ïñ¥Îë†...');
  await page.waitForTimeout(10000);

  await browser.close();
  console.log('\n‚úÖ ÌÖåÏä§Ìä∏ ÏôÑÎ£å!');
}

quickTest().catch(error => {
  console.error('‚ùå Ïò§Î•ò:', error);
  process.exit(1);
});
